{
    "openapi": "3.0.0",
    "info": {
      "title": "GIS Data Lake Services API",
      "description": "The GIS Data Lake Services API grants access to the GIS data lake which stores, processes and analyzes counterterrorism data from partner countries.",
      "version": "1.0.0"
    },
    "servers": [
      {
        "url": "http://localhost:5002"
      }
    ],
    "paths": {

      "/search": {
        "post": {
          "summary": "Perform a search query",
          "tags": ["Search"],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Search results",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SearchResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/upload": {
        "post": {
            "summary": "Upload a document",
            "tags": ["Upload"],
            "requestBody": {
                "required": true,
                "content": {
                    "multipart/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "document": {
                                    "type": "string",
                                    "format": "binary",
                                    "description": "The document to upload"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name for the document"
                                }
                            },
                            "required": ["document"]
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "Document uploaded successfully",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "description": "Status of the upload operation"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "Additional information about the upload"
                                    }
                                },
                                "required": ["status"]
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request or missing file"
                }
            }
        }
      },
      "/send": {
        "post": {
          "tags": ["RabbitMQ Send Message"],
          "summary": "Send a message to RabbitMQ queue",
          "description": "Sends a specified message to a RabbitMQ queue named 'test_queue'.",
          "consumes": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Hello RabbitMQ"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Message successfully sent",
              "schema": {
                "type": "string",
                "example": "Message sent"
              }
            }
          }
        }
      },
      "/start_consumer": {
        "get": {
          "tags": ["RabbitMQ Start Consumer"],
          "summary": "Start a RabbitMQ message consumer",
          "description": "Starts a RabbitMQ consumer that listens to the 'test_queue' and processes messages using a predefined callback function.",
          "responses": {
            "200": {
              "description": "Consumer successfully started",
              "schema": {
                "type": "string",
                "example": "Consumer started"
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "SearchRequest": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "description": "Search query string"
            }
          },
          "required": ["query"]
        },
        "SearchResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the search operation"
            },
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": true
              },
              "description": "Search results"
            }
          },
          "required": ["status", "data"]
        }
      }
    }
  }